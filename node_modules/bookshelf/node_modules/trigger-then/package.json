{
  "name": "trigger-then",
  "main": "trigger-then.js",
  "author": {
    "name": "Tim Griesser"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bookshelf/trigger-then"
  },
  "description": "Adding 'promise' triggers to Backbone events",
  "version": "0.1.1",
  "license": "MIT",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha -R spec test/index.js"
  },
  "devDependencies": {
    "backbone": "1.0.x",
    "mocha": "1.7.x",
    "when": "2.1.x",
    "q": "0.9.x"
  },
  "dependencies": {},
  "keywords": [
    "backbone",
    "deferred",
    "promise",
    "events"
  ],
  "readme": "# triggerThen\n\nAdding promises to Backbone event triggers, resolving when \neverything that needs triggering has completed. Allows returning\nvalues or promises from the listeners, where a failed promise will\nreject the events.\n\n## Initializing:\n\nProvide two arguments to the `trigger-then` library when required: \nthe copy of `Backbone` to mixin the `triggerThen` function, and the\npromise library (assuming it has a `reject` and `all` function).\n\n```\nrequire('trigger-then')(Backbone, When);\n\nvar Model = new Backbone.Model();\n\nModel.triggerThen('change').then(function(resp) {\n\n  // success!\n\n}, function(e) {\n  \n  // error!\n  console.log(e.stack);\n\n});\n```\n\n## License\n\nMIT",
  "bugs": {
    "url": "https://github.com/bookshelf/trigger-then/issues"
  },
  "_id": "trigger-then@0.1.1",
  "dist": {
    "shasum": "b2ad4482ebaedf880184e41055ddbc88bcc83e80"
  },
  "_from": "trigger-then@~0.1.1",
  "_resolved": "https://registry.npmjs.org/trigger-then/-/trigger-then-0.1.1.tgz"
}
