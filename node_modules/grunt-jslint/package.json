{
  "name": "grunt-jslint",
  "description": "Validates JavaScript files with JSLint",
  "version": "1.0.0",
  "homepage": "https://github.com/stephenmathieson/grunt-jslint",
  "author": {
    "name": "Stephen Mathieson",
    "email": "me@stephenmathieson.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stephenmathieson/grunt-jslint.git"
  },
  "bugs": {
    "url": "https://github.com/stephenmathieson/grunt-jslint/issues"
  },
  "licenses": [
    {
      "type": "WTFPL",
      "url": "https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"
    }
  ],
  "main": "index.js",
  "bin": {
    "grunt-jslint": "bin/grunt-jslint"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "make test"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt": "~0.4.1",
    "vows": "~0.7.0",
    "xml2js": "~0.2.8",
    "better-assert": "~1.0.0"
  },
  "keywords": [
    "gruntplugin",
    "jslint",
    "lint",
    "code quality"
  ],
  "readme": "# grunt-jslint\n\n[![Build Status](https://travis-ci.org/stephenmathieson/grunt-jslint.png?branch=master)](https://travis-ci.org/stephenmathieson/grunt-jslint) [![Dependency Status](https://gemnasium.com/stephenmathieson/grunt-jslint.png)](https://gemnasium.com/stephenmathieson/grunt-jslint)\n\nValidates JavaScript files with [JSLint] as a [grunt] task.\n\n## Installation\nInstall this grunt plugin next to your project's [Gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n## Documentation\n\nA multi-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n- **files** An array of files or [wildcards] which you want to be validated by JSLint\n- **exclude** An array of files or [wildcards] which you do *not* want to be validated by JSLint\n- **directives** Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as `predef: ['myglobal']`\n- **options**\n    - **errorsOnly** A Boolean option which tells the plugin to only display errors when set to `true`\n    - **log** A String/filepath option which, when provided, tells the plugin where to write a verbose log to\n    - **junit** A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to\n    - **failOnError** A Boolean option - defaults to `true`; when set to `false`, grunt will not fail if JSLint detects an error\n    - **checkstyle** A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to\n    - **shebang** Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\n### Moving to 1.0.0\n\ngrunt-jslint@1.0.0 has moved from a single-task to a multi-task, allowing you to specify different options for different groups of files.\n\nFor simple migration, just wrap `all: { ... }` around your jslint configuration in your Gruntfile and replace `files:` with `src:`.\n\nFor example:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      files: [ ... ],\n      options: { ... }\n    }\n  });\n};\n```\n\nhas become:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      all: {\n        src: [ ... ],\n        options: { ... }\n      }\n    }\n  });\n};\n```\n\n\n## Example Usage\n\n```javascript\nmodule.exports = function (grunt) {\n  'use strict';\n\n  grunt.loadNpmTasks('grunt-jslint'); // load the task\n\n  grunt.initConfig({\n    jslint: { // configure the task\n      // lint your project's server code\n      server: {\n        src: [ // some example files\n          'server/lib/*.js',\n          'server/routes/*.js',\n          'server/*.js',\n          'server/test/*.js'\n        ],\n        exclude: [\n          'server/config.js'\n        ],\n        directives: { // example directives\n          node: true,\n          todo: true\n        },\n        options: {\n          junit: 'out/server-junit.xml', // write the output to a JUnit XML\n          log: 'out/server-lint.log',\n          jslintXml: 'out/server-jslint.xml',\n          errorsOnly: true, // only display errors\n          failOnError: false, // defaults to true\n          checkstyle: 'out/server-checkstyle.xml' // write a checkstyle-XML\n        }\n      },\n      // lint your project's client code\n      client: {\n        src: [\n          'client/**/*.js'\n        ],\n        directives: {\n          browser: true,\n          predef: [\n            'jQuery'\n          ]\n        },\n        options: {\n          junit: 'out/client-junit.xml'\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('default', 'jslint');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `make test` in the root of your repository.\n\n## License\nCopyright (c) 2013 Stephen Mathieson\nLicensed under the WTFPL license.\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: http://gruntjs.com/\n[getting_started]: http://gruntjs.com/getting-started#the-gruntfile\n[wildcards]: http://gruntjs.com/configuring-tasks#files\n[JSLint]: https://github.com/douglascrockford/JSLint\n",
  "readmeFilename": "README.md",
  "_id": "grunt-jslint@1.0.0",
  "dist": {
    "shasum": "a2d5a64e4839c3df3976808f4835b639319eca53"
  },
  "_from": "grunt-jslint@~1.0.0",
  "_resolved": "https://registry.npmjs.org/grunt-jslint/-/grunt-jslint-1.0.0.tgz"
}
