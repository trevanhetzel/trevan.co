{
  "name": "downsize",
  "version": "0.0.2",
  "description": "Tag-safe truncation for HTML and XML. Works by word!",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cgiffard/Downsize"
  },
  "keywords": [
    "text",
    "truncate",
    "downsize",
    "word",
    "limit",
    "character",
    "html",
    "xml",
    "tag",
    "safe"
  ],
  "author": {
    "name": "Christopher Giffard"
  },
  "license": "BSD",
  "devDependencies": {
    "chai": "~1.5.0",
    "mocha": "~1.9.0"
  },
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cgiffard/Downsize/issues"
  },
  "readme": "# Downsize\n\nTag-safe HTML and XML text-truncation!\n\n```sh\nnpm install downsize\n```\n\n## Usage\n\n### Word-truncation\n\n```javascript\ndownsize(\"<p>some markup here...</p>\",{\"words\": 2});\n```\n\n```html\n<p>some markup</p>\n```\n\n### Character truncation\n\n```javascript\ndownsize(\"<p>some markup here...</p>\",{\"characters\": 6});\n```\n\n```html\n<p>some m</p>\n```\n\n### Appending an ellipsis\n\n```javascript\ndownsize(\"<p>some markup here...</p>\",{\"characters\": 6, \"append\": \"...\"});\n```\n\n```html\n<p>some m...</p>\n```\n\n## Notes\n\nDownsize is designed to handle bad markup, and should count words and \ncharacters accurately in spite of it. But it won't hold your hand.\n\nIt does close outstanding open tags for you, but leaves erroneous close-tags \nfor which the opening tag couldn't be found or was erroneously nested.\n\n## Testing\n\n```sh\nnpm test\n```",
  "_id": "downsize@0.0.2",
  "dist": {
    "shasum": "3fceb35d27f1909a012ffcd873aca24528d0eb9f"
  },
  "_from": "downsize@0.0.2",
  "_resolved": "https://registry.npmjs.org/downsize/-/downsize-0.0.2.tgz"
}
